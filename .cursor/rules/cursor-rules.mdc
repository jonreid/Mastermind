---
description: 
globs: 
alwaysApply: false
---
# Cursor Rules Management Guide

## Rule Structure Format

Every cursor rule must follow this exact metadata and content structure:

````markdown
---
description: Short description of the rule's purpose
globs: optional/path/pattern/**/*
alwaysApply: false
---
# Rule Title

Main content explaining the rule with markdown formatting.

1. Step-by-step instructions
2. Code examples
3. Guidelines

Example:
```swift
// Good
func goodExample() {
  // Correct implementation
}

// Bad example
func badExample() {
  // Incorrect implementation
}
```
````

## File Organization

### Required Location

All cursor rule files **must** be placed in:

```
PROJECT_ROOT/.cursor/rules/
```

### Directory Structure

```
PROJECT_ROOT/
├── .cursor/
│   └── rules/
│       ├── your-rule-name.mdc
│       ├── another-rule.mdc
│       └── cursor-rules.mdc
└── ...
```

### Naming Conventions

- Use **kebab-case** for all filenames
- Always use **.mdc** extension
- Make names **descriptive** of the rule's purpose
- Examples: `swift-style.mdc`, `swiftui-styling.mdc`, `swift-documentation.mdc`

## Content Guidelines

### Writing Effective Rules

1. **Be specific and actionable** - Provide clear instructions
2. **Include code examples** - Show both good and bad practices
3. **Reference existing files** - Use `@filename.ext` format
4. **Keep it focused** - One rule per concern/pattern
5. **Add context** - Explain why the rule exists

### Code Examples Format

```swift
// ✅ Good: Clear and follows Swift conventions
func processUser(id: String, name: String) -> User {
  return User(id: id, displayName: name)
}

// ❌ Bad: Unclear parameter passing
func processUser(_ id: String, _ name: String) -> User {
  return User(id: id, displayName: name)
}
```

### File References

## Forbidden Locations

**Never** place rule files in:
- Project root directory
- Any subdirectory outside `.cursor/rules/`
- Source code folders

## Rule Categories

Organize rules by purpose:
- **Code Style**: `swift-style.mdc`, `swiftui-conventions.mdc`
- **Architecture**: `swift-patterns.mdc`, `folder-structure.mdc`
- **Documentation**: `swift-documentation.mdc`, `readme-format.mdc`
- **Tools**: `testing-patterns.mdc`, `build-config.mdc`
- **Meta**: `cursor-rules.mdc`, `self-improve.mdc`

## Best Practices

### Rule Creation Checklist
- [ ] File placed in `.cursor/rules/` directory
- [ ] Filename uses kebab-case with `.mdc` extension
- [ ] Includes proper metadata section
- [ ] Contains clear title and sections
- [ ] Provides both good and bad examples
- [ ] References relevant project files
- [ ] Follows consistent formatting

### Maintenance
- **Review regularly** - Keep rules up to date with codebase changes
- **Update examples** - Ensure code samples reflect current patterns
- **Cross-reference** - Link related rules together
- **Document changes** - Update rules when patterns evolve
